module.exports = {
  env: {
    browser: true,
    es6: true,
    node: true,
  },
  extends: [
    "standard",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
  ],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "tsconfig.json",
    sourceType: "module",
  },
  plugins: ["react", "react-hooks", "@typescript-eslint"],
  settings: {
    react: {
      version: "detect",
    },
  },
  rules: {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "off",
    "@typescript-eslint/class-name-casing": "off",
    "@typescript-eslint/explicit-member-accessibility": [
      "off",
      {
        overrides: {
          constructors: "off",
        },
      },
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/member-delimiter-style": [
      "off",
      "error",
      {
        multiline: {
          delimiter: "none",
          requireLast: true,
        },
        singleline: {
          delimiter: "semi",
          requireLast: false,
        },
      },
    ],
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/member-ordering": "off",
    "@typescript-eslint/no-array-constructor": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-parameter-properties": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        argsIgnorePattern: "^_",
      },
    ],
    "@typescript-eslint/no-use-before-declare": "off",
    "react/react-in-jsx-scope": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-for-of": "off",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/semi": ["off", null],
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/unified-signatures": "error",
    "node/no-deprecated-api": "error",
    "promise/param-names": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/display-name": "off",
    "react/no-danger": "error",
    "react/no-find-dom-node": "error",
    "react/prop-types": "off",
    "array-bracket-spacing": "error",
    "arrow-body-style": "error",
    "arrow-parens": ["off", "as-needed"],
    "arrow-spacing": "error",
    "block-spacing": "error",
    "brace-style": "error",
    camelcase: "off",
    complexity: "off",
    "comma-dangle": "off",
    "constructor-super": "error",
    curly: "error",
    "default-case": "off",
    "dot-notation": "off",
    "func-call-spacing": "error",
    "eol-last": "error",
    eqeqeq: ["error", "smart"],
    "generator-star-spacing": ["error", { before: false, after: true }],
    "guard-for-in": "off",
    "handle-callback-err": "off",
    "key-spacing": "error",
    "keyword-spacing": "error",
    "id-blacklist": "error",
    "id-match": "error",
    "import/first": "off",
    "import/no-duplicates": "off",
    "import/order": "off",
    indent: ["off", 2],
    "lines-between-class-members": "error",
    "max-classes-per-file": ["off", 1],
    "max-depth": ["error", 7],
    "max-len": "off",
    "max-statements": "off",
    "new-parens": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "off",
    "no-cond-assign": "error",
    "no-console": "off",
    "no-debugger": "off",
    "no-empty": "error",
    "no-eval": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-parens": "error",
    "no-fallthrough": "off",
    "no-inner-declarations": "off",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "error",
    "no-mixed-operators": "off",
    "no-multi-spaces": "error",
    "no-multi-str": "off",
    "no-multiple-empty-lines": "error",
    "no-new-wrappers": "error",
    "no-prototype-builtins": "off",
    "no-return-assign": "off",
    "no-shadow": [
      "error",
      {
        hoist: "all",
      },
    ],
    "no-tabs": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef": "off",
    "no-undef-init": "error",
    "no-underscore-dangle": "off",
    "no-unneeded-ternary": "off",
    "multiline-ternary": "off",
    "no-unsafe-finally": "error",
    "no-unused-expressions": "error",
    "no-unused-labels": "error",
    "no-unused-vars": "off",
    "no-useless-constructor": "off",
    "no-useless-escape": "off",
    "no-useless-return": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "object-curly-newline": "error",
    "object-curly-spacing": "error",
    "object-property-newline": "error",
    "object-shorthand": "error",
    "one-var": "error",
    "operator-linebreak": "error",
    "padded-blocks": "error",
    "prefer-const": "error",
    "quote-props": "off",
    radix: "error",
    semi: "off",
    "space-before-blocks": "error",
    "space-before-function-paren": [
      "off",
      {
        anonymous: "never",
        asyncArrow: "always",
        named: "never",
      },
    ],
    "space-infix-ops": "error",
    "space-in-parens": "error",
    "space-unary-ops": "error",
    "spaced-comment": "error",
    "template-curly-spacing": "error",
    "use-isnan": "error",
    "valid-typeof": "off",
    quotes: ["off", "single"],
  },
  overrides: [
    {
      files: [
        "**/*-test.js",
        "**/*-test.ts",
        "**/*-test.tsx",
        "**/*.test.js",
        "**/*.test.ts*",
      ],
      rules: {
        "@typescript-eslint/no-var-requires": "off",
        "max-len": "off",
        "no-shadow": "off",
        "no-undef": "off",
        "no-unused-expressions": "off",
      },
    },
  ],
};
